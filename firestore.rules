rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /{document=**} {
      allow read: if true;
    }
    
    match /users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }
    
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (resource.data.authorId == request.auth.uid || isAdmin());
      
      match /replies/{replyId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && 
          (resource.data.authorId == request.auth.uid || isAdmin());
      }
    }
    
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if isAuthenticated() && isAdmin();
    }
  }
} 